{"version":3,"file":"reactrix.umd.min.js","sources":["../src/utils/types.js","../src/utils/assert.js","../src/alpha.js","../src/alphaNum.js","../src/ipAddress.js","../src/lowercase.js","../src/undefined.js","../src/uppercase.js","../src/required.js","../src/function.js","../src/hexColor.js","../src/ascii.js","../src/base32.js","../src/base64.js","../src/boolean.js","../src/decimal.js","../src/integer.js","../src/numeric.js","../src/date.js","../src/url.js","../src/port.js","../src/email.js","../src/object.js","../src/slug.js","../src/string.js","../src/currency/bitcoin.js","../src/currency/ethereum.js","../src/utils/includes.js","../src/iso/ISO31661Alpha2.js","../src/iso/ISO31661Alpha3.js","../src/hash/md4.js","../src/hash/md5.js","../src/hash/sha1.js","../src/hash/sha256.js","../src/hash/sha384.js","../src/hash/sha512.js","../src/common.js","../src/useValidate.js"],"sourcesContent":["// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\n\n// Check if given argument is null or undefined.\nexport function isNullOrUndefined(value) {\n  return value === null || value === undefined;\n}\n\n// Check if given argument is an empty array.\nexport function isEmptyArray(arr) {\n  return Array.isArray(arr) && arr.length === 0;\n}\n\n// Check if given argument is an object.\nexport const isObject = (obj) =>\n  obj !== null && obj && typeof obj === 'object' && !Array.isArray(obj);\n\n// Check if given argument is a callback function.\nexport function isCallable(fn) {\n  return typeof fn === 'function';\n}\n\n// Check if given argument is a string.\nexport function isString(arr) {\n  return typeof arr === 'string';\n}\n\n// Check if given object has own property.\nexport function isHasOwnProperty(obj, key) {\n  return isObject(obj) && obj.hasOwnProperty(key);\n}\n","// assert regex expression.\nexport const assertRegex = (expr) => (value) => {\n  return expr.test(value);\n}\n// assert custom expression.\nexport const assertCustomRegex = (cb) => (value) => {\n  return cb(value);\n};\n\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\n// Structured similarly to vuelidate's alpha.js\n// https://github.com/vuelidate/vuelidate/blob/master/src/validators/alpha.js\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/^[a-zA-Z]*$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\n// Structured similarly to vuelidate's alphaNum.js\n// https://github.com/vuelidate/vuelidate/blob/master/src/validators/alphaNum.js\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/^[a-zA-Z0-9]*$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/^(?!0)(?!.*\\.$)((1?\\d?\\d|25[0-5]|2[0-4]\\d)(\\.|$)){4}$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertCustomRegex } from './utils/assert';\nexport default assertCustomRegex(val => val === val.toLowerCase());\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertCustomRegex } from './utils/assert';\nimport { isNullOrUndefined } from './utils/types';\nexport default assertCustomRegex(val => isNullOrUndefined(val));\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertCustomRegex } from './utils/assert';\nexport default assertCustomRegex(val => val === val.toUpperCase());\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/[^\\s]+$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertCustomRegex } from './utils/assert';\nimport { isCallable } from './utils/types';\nexport default assertCustomRegex(val => isCallable(val));\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/^[\\x00-\\x7F]+$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/^(?:[A-Z2-7]{8})*(?:[A-Z2-7]{2}={6}|[A-Z2-7]{4}={4}|[A-Z2-7]{5}={3}|[A-Z2-7]{7}=)?$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/^([a-z0-9\\-]+\\.)+[a-z0-9]+\\:[1-9][0-9]+$/i);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/^(true|false)$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\n// Structured similarly to vuelidate's decimal.js\n// https://github.com/vuelidate/vuelidate/blob/master/src/validators/decimal.js\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/^[-]?\\d*(\\.\\d+)?$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\n// Structured similarly to vuelidate's integer.js\n// https://github.com/vuelidate/vuelidate/blob/master/src/validators/integer.js\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/(^[0-9]*$)|(^-[0-9]+$)/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\n// Structured similarly to vuelidate's numeric.js\n// https://github.com/vuelidate/vuelidate/blob/master/src/validators/numeric.js\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/^[0-9]*$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertCustomRegex } from './utils/assert';\nexport default assertCustomRegex(val => val instanceof Date);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\n// Structured similarly to vuelidate's url.js\n// https://github.com/vuelidate/vuelidate/blob/master/src/validators/url.js\nimport { assertRegex } from './utils/assert';\nconst urlRegex = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i;\nexport default assertRegex(urlRegex);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(new RegExp(':(\\\\d{2,5})', 'g'));\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\n// Structured similarly to vuelidate's email.js\n// https://github.com/vuelidate/vuelidate/blob/master/src/validators/email.js\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/(^$|^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$)/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertCustomRegex } from './utils/assert';\nimport { isObject } from './utils/types';\nexport default assertCustomRegex(val => isObject(val));\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\n// Structured similarly to vuelidate's alpha.js\n// https://github.com/vuelidate/vuelidate/blob/master/src/validators/alpha.js\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/^[^\\s-_](?!.*?[-_]{2,})([a-z0-9-\\\\]{1,})[^\\s]*[^-_\\s]$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertCustomRegex } from './utils/assert';\nimport { isString } from './utils/types';\nexport default assertCustomRegex(val => isString(val));\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from '../utils/assert';\nexport default assertRegex(/(?:[13][a-km-zA-HJ-NP-Z1-9]{25,34})$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from '../utils/assert';\nexport default assertRegex(/^(0x)[0-9a-f]{40}$/i);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nexport const includes = (arr, val) => arr.some(arrVal => val === arrVal);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { includes } from '../utils/includes';\nimport { assertCustomRegex } from '../utils/assert';\n// from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\nconst validISO31661Alpha2CountriesCodes = [\n  'AD', 'AE', 'AF', 'AG', 'AI', 'AL', 'AM', 'AO', 'AQ', 'AR', 'AS', 'AT', 'AU', 'AW', 'AX', 'AZ',\n  'BA', 'BB', 'BD', 'BE', 'BF', 'BG', 'BH', 'BI', 'BJ', 'BL', 'BM', 'BN', 'BO', 'BQ', 'BR', 'BS', 'BT', 'BV', 'BW', 'BY', 'BZ',\n  'CA', 'CC', 'CD', 'CF', 'CG', 'CH', 'CI', 'CK', 'CL', 'CM', 'CN', 'CO', 'CR', 'CU', 'CV', 'CW', 'CX', 'CY', 'CZ',\n  'DE', 'DJ', 'DK', 'DM', 'DO', 'DZ',\n  'EC', 'EE', 'EG', 'EH', 'ER', 'ES', 'ET',\n  'FI', 'FJ', 'FK', 'FM', 'FO', 'FR',\n  'GA', 'GB', 'GD', 'GE', 'GF', 'GG', 'GH', 'GI', 'GL', 'GM', 'GN', 'GP', 'GQ', 'GR', 'GS', 'GT', 'GU', 'GW', 'GY',\n  'HK', 'HM', 'HN', 'HR', 'HT', 'HU',\n  'ID', 'IE', 'IL', 'IM', 'IN', 'IO', 'IQ', 'IR', 'IS', 'IT',\n  'JE', 'JM', 'JO', 'JP',\n  'KE', 'KG', 'KH', 'KI', 'KM', 'KN', 'KP', 'KR', 'KW', 'KY', 'KZ',\n  'LA', 'LB', 'LC', 'LI', 'LK', 'LR', 'LS', 'LT', 'LU', 'LV', 'LY',\n  'MA', 'MC', 'MD', 'ME', 'MF', 'MG', 'MH', 'MK', 'ML', 'MM', 'MN', 'MO', 'MP', 'MQ', 'MR', 'MS', 'MT', 'MU', 'MV', 'MW', 'MX', 'MY', 'MZ',\n  'NA', 'NC', 'NE', 'NF', 'NG', 'NI', 'NL', 'NO', 'NP', 'NR', 'NU', 'NZ',\n  'OM',\n  'PA', 'PE', 'PF', 'PG', 'PH', 'PK', 'PL', 'PM', 'PN', 'PR', 'PS', 'PT', 'PW', 'PY',\n  'QA',\n  'RE', 'RO', 'RS', 'RU', 'RW',\n  'SA', 'SB', 'SC', 'SD', 'SE', 'SG', 'SH', 'SI', 'SJ', 'SK', 'SL', 'SM', 'SN', 'SO', 'SR', 'SS', 'ST', 'SV', 'SX', 'SY', 'SZ',\n  'TC', 'TD', 'TF', 'TG', 'TH', 'TJ', 'TK', 'TL', 'TM', 'TN', 'TO', 'TR', 'TT', 'TV', 'TW', 'TZ',\n  'UA', 'UG', 'UM', 'US', 'UY', 'UZ',\n  'VA', 'VC', 'VE', 'VG', 'VI', 'VN', 'VU',\n  'WF', 'WS',\n  'YE', 'YT',\n  'ZA', 'ZM', 'ZW',\n];\n\nexport default assertCustomRegex(val => includes(validISO31661Alpha2CountriesCodes, val.toUpperCase()));\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { includes } from '../utils/includes';\nimport { assertCustomRegex } from '../utils/assert';\n// from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3\nconst validISO31661Alpha3CountriesCodes = [\n  'AFG', 'ALA', 'ALB', 'DZA', 'ASM', 'AND', 'AGO', 'AIA', 'ATA', 'ATG', 'ARG', 'ARM', 'ABW', 'AUS', 'AUT', 'AZE',\n  'BHS', 'BHR', 'BGD', 'BRB', 'BLR', 'BEL', 'BLZ', 'BEN', 'BMU', 'BTN', 'BOL', 'BES', 'BIH', 'BWA', 'BVT', 'BRA',\n  'IOT', 'BRN', 'BGR', 'BFA', 'BDI', 'KHM', 'CMR', 'CAN', 'CPV', 'CYM', 'CAF', 'TCD', 'CHL', 'CHN', 'CXR', 'CCK',\n  'COL', 'COM', 'COG', 'COD', 'COK', 'CRI', 'CIV', 'HRV', 'CUB', 'CUW', 'CYP', 'CZE', 'DNK', 'DJI', 'DMA', 'DOM',\n  'ECU', 'EGY', 'SLV', 'GNQ', 'ERI', 'EST', 'ETH', 'FLK', 'FRO', 'FJI', 'FIN', 'FRA', 'GUF', 'PYF', 'ATF', 'GAB',\n  'GMB', 'GEO', 'DEU', 'GHA', 'GIB', 'GRC', 'GRL', 'GRD', 'GLP', 'GUM', 'GTM', 'GGY', 'GIN', 'GNB', 'GUY', 'HTI',\n  'HMD', 'VAT', 'HND', 'HKG', 'HUN', 'ISL', 'IND', 'IDN', 'IRN', 'IRQ', 'IRL', 'IMN', 'ISR', 'ITA', 'JAM', 'JPN',\n  'JEY', 'JOR', 'KAZ', 'KEN', 'KIR', 'PRK', 'KOR', 'KWT', 'KGZ', 'LAO', 'LVA', 'LBN', 'LSO', 'LBR', 'LBY', 'LIE',\n  'LTU', 'LUX', 'MAC', 'MKD', 'MDG', 'MWI', 'MYS', 'MDV', 'MLI', 'MLT', 'MHL', 'MTQ', 'MRT', 'MUS', 'MYT', 'MEX',\n  'FSM', 'MDA', 'MCO', 'MNG', 'MNE', 'MSR', 'MAR', 'MOZ', 'MMR', 'NAM', 'NRU', 'NPL', 'NLD', 'NCL', 'NZL', 'NIC',\n  'NER', 'NGA', 'NIU', 'NFK', 'MNP', 'NOR', 'OMN', 'PAK', 'PLW', 'PSE', 'PAN', 'PNG', 'PRY', 'PER', 'PHL', 'PCN',\n  'POL', 'PRT', 'PRI', 'QAT', 'REU', 'ROU', 'RUS', 'RWA', 'BLM', 'SHN', 'KNA', 'LCA', 'MAF', 'SPM', 'VCT', 'WSM',\n  'SMR', 'STP', 'SAU', 'SEN', 'SRB', 'SYC', 'SLE', 'SGP', 'SXM', 'SVK', 'SVN', 'SLB', 'SOM', 'ZAF', 'SGS', 'SSD',\n  'ESP', 'LKA', 'SDN', 'SUR', 'SJM', 'SWZ', 'SWE', 'CHE', 'SYR', 'TWN', 'TJK', 'TZA', 'THA', 'TLS', 'TGO', 'TKL',\n  'TON', 'TTO', 'TUN', 'TUR', 'TKM', 'TCA', 'TUV', 'UGA', 'UKR', 'ARE', 'GBR', 'USA', 'UMI', 'URY', 'UZB', 'VUT',\n  'VEN', 'VNM', 'VGB', 'VIR', 'WLF', 'ESH', 'YEM', 'ZMB', 'ZWE',\n];\n\nexport default assertCustomRegex(val => includes(validISO31661Alpha3CountriesCodes, val.toUpperCase()));\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from '../utils/assert';\nexport default assertRegex(/^[a-fA-F0-9]{32}$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from '../utils/assert';\nexport default assertRegex(/^[a-fA-F0-9]{32}$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from '../utils/assert';\nexport default assertRegex(/^[a-fA-F0-9]{40}$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from '../utils/assert';\nexport default assertRegex(/^[a-fA-F0-9]{64}$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from '../utils/assert';\nexport default assertRegex(/^[a-fA-F0-9]{96}$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from '../utils/assert';\nexport default assertRegex(/^[a-fA-F0-9]{128}$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { isHasOwnProperty, isString , isNullOrUndefined } from './utils/types';\nimport * as Register from './register';\n\n// validate given input.\nexport function validateRules(input, rules, lang = 'en') {\n\n  if(isNullOrUndefined(Register[lang])) {\n    throw new TypeError(`Reactrix does not support ${lang} yet`);\n  }\n\n  if(!isHasOwnProperty(input, 'fieldKey')) {\n    input = { fieldKey: 'V' , fieldVal: input };\n  }\n\n  const { fieldKey, fieldVal } = input;\n  // list of errors provied by Reactrix.\n  const stackError = [];\n  // https://github.com/getspooky/Reactrix\n  if (!isString(rules)) {\n    throw new TypeError('Rule must be string (see docs)');\n  }\n\n  // check if the given rule has a value\n  const splitPipe = rules.split('|');\n  // push errors.\n  splitPipe.forEach(rule => {\n    const getRuleExp = Register[rule];\n    if(isNullOrUndefined(getRuleExp)) {\n      throw new TypeError(`No such validator '${rule}' exists.`);\n    }\n    // push errors.\n    if(!getRuleExp(fieldVal)) {\n      // translate given validator.\n      const msgError = new String(Register[lang].messages[rule]);\n      console.log(\"Hello\");\n      stackError.push(msgError.replace('{{input}}', fieldKey));\n    }\n  });\n\n  return stackError;\n\n}\n\n// return the error length.\nexport function getStackError(stackError) {\n  return stackError.length;\n}\n\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport React, { useState } from 'react';\nimport { validateRules } from './common';\nimport { isObject, isNullOrUndefined } from './utils/types';\n\nexport function useValidate(defaultLanguage = 'en') {\n\n   const [msg, setMsg] = useState([]);\n\n   const setValidator = (data, rules) => {\n\n     if(!isObject(rules) || isNullOrUndefined(rules)) {\n       throw new TypeError('Rules has to return an object (see docs)');\n     }\n\n     // Starts the validation process.\n     for (const [key, value] of Object.entries(rules)) {\n        const message = validateRules(data[key], value, defaultLanguage);\n        // push message state.\n        setMsg(previousState => [...previousState,...message]);\n     }\n\n   };\n\n   return [ msg, setValidator ];\n\n}\n"],"names":["isNullOrUndefined","value","isObject","obj","Array","isArray","isString","arr","assertRegex","expr","test","assertCustomRegex","cb","val","toLowerCase","toUpperCase","Date","RegExp","includes","some","arrVal","validISO31661Alpha2CountriesCodes","validISO31661Alpha3CountriesCodes","validateRules","input","rules","lang","Register","TypeError","key","hasOwnProperty","fieldKey","fieldVal","stackError","split","forEach","rule","getRuleExp","msgError","String","messages","console","log","push","replace","defaultLanguage","useState","msg","setMsg","data","message","previousState","Object","entries"],"mappings":"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"}