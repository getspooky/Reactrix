!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("react")):"function"==typeof define&&define.amd?define(["exports","react"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).Reactrix={},e.React)}(this,(function(e,t){"use strict";function i(e){return null==e}var a=function(e){return null!==e&&e&&"object"==typeof e&&!Array.isArray(e)};function n(e){return"string"==typeof e}var u=function(e){return function(t){return e.test(t)}},r=function(e){return function(t){return e(t)}},d=u(/^[a-zA-Z]*$/),o=u(/^[a-zA-Z0-9]*$/),p=u(/^(?!0)(?!.*\.$)((1?\d?\d|25[0-5]|2[0-4]\d)(\.|$)){4}$/),s=r((function(e){return e===e.toLowerCase()})),l=r((function(e){return i(e)})),h=r((function(e){return e===e.toUpperCase()})),c=u(/[^\s]+$/),m=r((function(e){return"function"==typeof e})),f=u(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/),A=u(/^[\x00-\x7F]+$/),T=u(/^(?:[A-Z2-7]{8})*(?:[A-Z2-7]{2}={6}|[A-Z2-7]{4}={4}|[A-Z2-7]{5}={3}|[A-Z2-7]{7}=)?$/),M=u(/^([a-z0-9\-]+\.)+[a-z0-9]+\:[1-9][0-9]+$/i),L=u(/^(true|false)$/),S=u(/^[-]?\d*(\.\d+)?$/),R=u(/(^[0-9]*$)|(^-[0-9]+$)/),N=u(/^[0-9]*$/),C=r((function(e){return e instanceof Date})),b=u(/^(?:(?:https?|ftp):\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))(?::\d{2,5})?(?:[/?#]\S*)?$/i),G=u(new RegExp(":(\\d{2,5})","g")),I=u(/(^$|^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$)/),B=r((function(e){return a(e)})),E=u(/^[^\s-_](?!.*?[-_]{2,})([a-z0-9-\\]{1,})[^\s]*[^-_\s]$/),O=r((function(e){return n(e)})),U=u(/(?:[13][a-km-zA-HJ-NP-Z1-9]{25,34})$/),v=u(/^(0x)[0-9a-f]{40}$/i),K=function(e,t){return e.some((function(e){return t===e}))},P=["AD","AE","AF","AG","AI","AL","AM","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SV","SX","SY","SZ","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","YE","YT","ZA","ZM","ZW"],F=r((function(e){return K(P,e.toUpperCase())})),D=["AFG","ALA","ALB","DZA","ASM","AND","AGO","AIA","ATA","ATG","ARG","ARM","ABW","AUS","AUT","AZE","BHS","BHR","BGD","BRB","BLR","BEL","BLZ","BEN","BMU","BTN","BOL","BES","BIH","BWA","BVT","BRA","IOT","BRN","BGR","BFA","BDI","KHM","CMR","CAN","CPV","CYM","CAF","TCD","CHL","CHN","CXR","CCK","COL","COM","COG","COD","COK","CRI","CIV","HRV","CUB","CUW","CYP","CZE","DNK","DJI","DMA","DOM","ECU","EGY","SLV","GNQ","ERI","EST","ETH","FLK","FRO","FJI","FIN","FRA","GUF","PYF","ATF","GAB","GMB","GEO","DEU","GHA","GIB","GRC","GRL","GRD","GLP","GUM","GTM","GGY","GIN","GNB","GUY","HTI","HMD","VAT","HND","HKG","HUN","ISL","IND","IDN","IRN","IRQ","IRL","IMN","ISR","ITA","JAM","JPN","JEY","JOR","KAZ","KEN","KIR","PRK","KOR","KWT","KGZ","LAO","LVA","LBN","LSO","LBR","LBY","LIE","LTU","LUX","MAC","MKD","MDG","MWI","MYS","MDV","MLI","MLT","MHL","MTQ","MRT","MUS","MYT","MEX","FSM","MDA","MCO","MNG","MNE","MSR","MAR","MOZ","MMR","NAM","NRU","NPL","NLD","NCL","NZL","NIC","NER","NGA","NIU","NFK","MNP","NOR","OMN","PAK","PLW","PSE","PAN","PNG","PRY","PER","PHL","PCN","POL","PRT","PRI","QAT","REU","ROU","RUS","RWA","BLM","SHN","KNA","LCA","MAF","SPM","VCT","WSM","SMR","STP","SAU","SEN","SRB","SYC","SLE","SGP","SXM","SVK","SVN","SLB","SOM","ZAF","SGS","SSD","ESP","LKA","SDN","SUR","SJM","SWZ","SWE","CHE","SYR","TWN","TJK","TZA","THA","TLS","TGO","TKL","TON","TTO","TUN","TUR","TKM","TCA","TUV","UGA","UKR","ARE","GBR","USA","UMI","URY","UZB","VUT","VEN","VNM","VGB","VIR","WLF","ESH","YEM","ZMB","ZWE"],g=r((function(e){return K(D,e.toUpperCase())})),H=u(/^[a-fA-F0-9]{32}$/),Z=u(/^[a-fA-F0-9]{32}$/),V=u(/^[a-fA-F0-9]{40}$/),y=u(/^[a-fA-F0-9]{64}$/),$=u(/^[a-fA-F0-9]{96}$/),Y=u(/^[a-fA-F0-9]{128}$/),W={messages:{alpha:"The {{input}} field may only contain alphabetic characters",alphaNum:"The {{input}} field may only contain letters and numbers",ascii:"The {{input}} field may only contain ASCII characters",base32:"The {{input}} field must be base32 encoded",base64:"The {{input}} field must be base64 encoded",boolean:"The {{input}} field must be a boolean",date:"The {{input}} field must be a valid date",decimal:"The {{input}} field must be a decimal",email:"The {{input}} field must be a valid email",function:"The {{input}} field must be a function",hexColor:"The {{input}} field must be a valid hex color",integer:"The {{input}} field must be an integer",ipAddress:"The {{input}} field must be a valid ipAddress",lowercase:"The {{input}} field must be a lowercase",mimeType:"The {{input}} field must be a valid MIME type format",numeric:"The {{input}} field must be a numeric",object:"The {{input}} field must be a object",port:"The {{input}} field must be a valid port",string:"The {{input}} field must be a string",undefined:"The {{input}} field must be an undefined",uppercase:"The {{input}} field must be an uppercase",url:"The {{input}} field must be a valid url",max:"The {{input}} field must be less than or equal to given number",min:"The {{input}} field must be more than or equal to given number",ISO31661Alpha2:"The {{input}} field must be a valid  ISO 3166-1 alpha-2",ISO31661Alpha1:"The {{input}} field must be a valid  ISO 3166-1 alpha-1",bitcoinAddress:"The {{input}} field must be a valid  BTC address",ethereumAddress:"The {{input}} field must be a valid  Ethereum address",md4:"The {{input}} field must be a valid md4 algorithm",md5:"The {{input}} field must be a valid md5 algorithm",sh1:"The {{input}} field must be a valid sh1 algorithm",sha256:"The {{input}} field must be a valid sha256 algorithm",sha384:"The {{input}} field must be a valid sha384 algorithm",sha512:"The {{input}} field must be a valid sha512 algorithm"}},J={messages:{alpha:"Le champ {{input}} ne peut contenir que des caractères alphabétiques",alphaNum:"Le champ {{input}} ne peut contenir que des lettres et des chiffres",ascii:"Le champ {{input}} ne peut contenir que des caractères ASCII",base32:"Le champ {{input}} doit être encodé en base32",base64:"Le champ {{input}} doit être encodé en base64",boolean:"Le champ {{input}} doit être un booléen",date:"Le champ {{input}} doit être une date valide",decimal:"Le champ {{input}} doit être un décimal",email:"Le champ {{input}} doit être une adresse e-mail valide",function:"Le champ {{input}} doit être une fonction",hexColor:"Le champ {{input}} doit être une couleur hexadécimale valide",integer:"Le champ {{input}} doit être un entier",ipAddress:"Le champ {{input}} doit être une adresse ip valide",lowercase:"Le champ {{input}} doit être en minuscule",mimeType:"Le champ {{input}} doit être un format de type MIME valide",numeric:"Le champ {{input}} doit être numérique",object:"Le champ {{input}} doit être un objet",port:"Le champ {{input}} doit être un port valide",string:"Le champ {{input}} doit être une chaîne",undefined:"Le champ {{input}} doit être un champ non défini",uppercase:"Le champ {{input}} doit être en majuscule",url:"Le champ {{input}} doit être une URL valide",max:"Le champ {{input}} doit être inférieur ou égal au nombre donné",min:"Le champ {{input}} doit être supérieur ou égal au nombre donné",ISO31661Alpha2:"Le champ {{input}} doit être un ISO 3166-1 alpha-2 valide",ISO31661Alpha1:"Le champ {{input}} doit être un ISO 3166-1 alpha-1 valide",bitcoinAddress:"Le champ {{input}} doit être une adresse BTC valide",ethereumAddress:"Le champ {{input}} doit être une adresse Ethereum valide",md4:"Le champ {{input}} doit être un algorithme md4 valide",md5:"Le champ {{input}} doit être un algorithme md5 valide",sh1:"Le champ {{input}} doit être un algorithme sh1 valide",sha256:"Le champ {{input}} doit être un algorithme sha256 valide",sha384:"Le champ {{input}} doit être un algorithme sha384 valide",sha512:"Le champ {{input}} doit être un algorithme sha512 valide"}},x=Object.freeze({__proto__:null,alpha:d,alphaNum:o,ipAddress:p,lowercase:s,undefined:l,uppercase:h,required:c,function:m,hexColor:f,ascii:A,base32:T,base64:M,boolean:L,decimal:S,integer:R,numeric:N,date:C,url:b,port:G,email:I,object:B,slug:E,string:O,bitcoin:U,ethereum:v,ISO31661Alpha2:F,ISO31661Alpha3:g,md4:H,md5:Z,sha1:V,sha256:y,sha384:$,sha512:Y,en:W,fr:J});function w(e,t,u){if(void 0===u&&(u="en"),i(x[u]))throw new TypeError("Reactrix does not support "+u+" yet");var r,d;d="fieldKey",a(r=e)&&r.hasOwnProperty(d)||(e={fieldKey:"V",fieldVal:e});var o=e,p=o.fieldKey,s=o.fieldVal,l=[];if(!n(t))throw new TypeError("Rule must be string (see docs)");return t.split("|").forEach((function(e){var t=x[e];if(i(t))throw new TypeError("No such validator '"+e+"' exists.");if(!t(s)){var a=new String(x[u].messages[e]);console.log("Hello"),l.push(a.replace("{{input}}",p))}})),l}e.useValidate=function(e){void 0===e&&(e="en");var n=t.useState([]),u=n[0],r=n[1];return[u,function(t,n){if(!a(n)||i(n))throw new TypeError("Rules has to return an object (see docs)");for(var u=function(){var i=o[d],a=i[0],n=i[1],u=w(t[a],n,e);r((function(e){return[].concat(e,u)}))},d=0,o=Object.entries(n);d<o.length;d++)u()}]},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=reactrix.umd.min.js.map
