!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("react")):"function"==typeof define&&define.amd?define(["exports","react"],r):r((e="undefined"!=typeof globalThis?globalThis:e||self).Reactrix={},e.React)}(this,(function(e,r){"use strict";var t=function(e){return null!==e&&e&&"object"==typeof e&&!Array.isArray(e)};function n(e,r,n){var o,i;void 0===n&&(n="en"),i="fieldKey",t(o=e)&&o.hasOwnProperty(i)||(e={fieldKey:"V",fieldVal:e});var u=e,a=u.fieldKey,s=u.fieldVal,f=[];if("string"!=typeof r)throw new TypeError("Rule must be string (see docs)");return r.split("|").forEach((function(e){if(!function(e){var r=require("../config/register-rules.json").rules;if(!r.hasOwnProperty(e))throw new TypeError("No such validator '"+e+"' exists.");var t=new String(r[e]).replace("root:","./");return require(t)}(e).default(s)){var r=function(e,r){var t=require("../config/register-lang.json").lang;if(!t.hasOwnProperty(r))throw new TypeError("Reactrix does not support "+r+" yet");var n=require("../locale/"+t[r]).messages;return new String(n[e])}(e,n).replace("{{input}}",a);f.push(r)}})),f}e.useValidate=function(e){void 0===e&&(e="en");var o=r.useState([]),i=o[0],u=o[1];return[i,function(r,o){if(!t(o)||null==o)throw new TypeError("Rules has to return an object (see docs)");for(var i=function(){var t=s[a],o=t[0],i=t[1],f=n(r[o],i,e);u((function(e){return[].concat(e,f)}))},a=0,s=Object.entries(o);a<s.length;a++)i()}]},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=reactrix.umd.min.js.map
