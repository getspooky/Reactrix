{"version":3,"file":"reactrix.umd.js","sources":["../src/utils/types.js","../src/utils/assert.js","../src/alpha.js","../src/alphaNum.js","../src/ipAddress.js","../src/lowercase.js","../src/undefined.js","../src/uppercase.js","../src/required.js","../src/function.js","../src/hexColor.js","../src/ascii.js","../src/base32.js","../src/base64.js","../src/boolean.js","../src/decimal.js","../src/integer.js","../src/numeric.js","../src/creditCard.js","../src/ean.js","../src/codePostal.js","../src/date.js","../src/url.js","../src/port.js","../src/email.js","../src/object.js","../src/slug.js","../src/string.js","../src/currency/bitcoin.js","../src/currency/ethereum.js","../src/utils/includes.js","../src/iso/ISO31661Alpha2.js","../src/iso/ISO31661Alpha3.js","../src/hash/md4.js","../src/hash/md5.js","../src/hash/sha1.js","../src/hash/sha256.js","../src/hash/sha384.js","../src/hash/sha512.js","../src/register.js","../src/common.js","../src/useValidate.js"],"sourcesContent":["// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\n\n// Check if given argument is null or undefined.\nexport function isNullOrUndefined(value) {\n  return value === null || value === undefined;\n}\n\n// Check if given argument is an empty array.\nexport function isEmptyArray(arr) {\n  return Array.isArray(arr) && arr.length === 0;\n}\n\n// Check if given argument is an object.\nexport const isObject = (obj) =>\n  obj !== null && obj && typeof obj === 'object' && !Array.isArray(obj);\n\n// Check if given argument is a callback function.\nexport function isCallable(fn) {\n  return typeof fn === 'function';\n}\n\n// Check if given argument is a string.\nexport function isString(arr) {\n  return typeof arr === 'string';\n}\n\n// Check if given object has own property.\nexport function isHasOwnProperty(obj, key) {\n  return isObject(obj) && obj.hasOwnProperty(key);\n}\n","// assert regex expression.\nexport const assertRegex = (expr) => (value) => {\n  return expr.test(value);\n}\n// assert custom expression.\nexport const assertCustomRegex = (cb) => (value) => {\n  return cb(value);\n};\n\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\n// Structured similarly to vuelidate's alpha.js\n// https://github.com/vuelidate/vuelidate/blob/master/src/validators/alpha.js\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/^[a-zA-Z]*$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\n// Structured similarly to vuelidate's alphaNum.js\n// https://github.com/vuelidate/vuelidate/blob/master/src/validators/alphaNum.js\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/^[a-zA-Z0-9]*$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/^(?!0)(?!.*\\.$)((1?\\d?\\d|25[0-5]|2[0-4]\\d)(\\.|$)){4}$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertCustomRegex } from './utils/assert';\nexport default assertCustomRegex(val => val === val.toLowerCase());\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertCustomRegex } from './utils/assert';\nimport { isNullOrUndefined } from './utils/types';\nexport default assertCustomRegex(val => isNullOrUndefined(val));\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertCustomRegex } from './utils/assert';\nexport default assertCustomRegex(val => val === val.toUpperCase());\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/[^\\s]+$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertCustomRegex } from './utils/assert';\nimport { isCallable } from './utils/types';\nexport default assertCustomRegex(val => isCallable(val));\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/^[\\x00-\\x7F]+$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/^(?:[A-Z2-7]{8})*(?:[A-Z2-7]{2}={6}|[A-Z2-7]{4}={4}|[A-Z2-7]{5}={3}|[A-Z2-7]{7}=)?$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/^([a-z0-9\\-]+\\.)+[a-z0-9]+\\:[1-9][0-9]+$/i);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/^(true|false)$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\n// Structured similarly to vuelidate's decimal.js\n// https://github.com/vuelidate/vuelidate/blob/master/src/validators/decimal.js\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/^[-]?\\d*(\\.\\d+)?$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\n// Structured similarly to vuelidate's integer.js\n// https://github.com/vuelidate/vuelidate/blob/master/src/validators/integer.js\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/(^[0-9]*$)|(^-[0-9]+$)/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\n// Structured similarly to vuelidate's numeric.js\n// https://github.com/vuelidate/vuelidate/blob/master/src/validators/numeric.js\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/^[0-9]*$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\n// Structured similarly to vuelidate's alpha.js\n// https://github.com/vuelidate/vuelidate/blob/master/src/validators/alpha.js\nimport { assertCustomRegex } from './utils/assert';\nconst creditCard = /^(?:4[0-9]{12}(?:[0-9]{3,6})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12,15}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11}|6[27][0-9]{14})$/;\nexport default assertCustomRegex((str) => {\n  const sanitized = str.replace(/[- ]+/g, '');\n  if (!creditCard.test(sanitized)) {\n    return false;\n  }\n  let sum = 0;\n  let digit;\n  let tmpNum;\n  let shouldDouble;\n  for (let i = sanitized.length - 1; i >= 0; i--) {\n    digit = sanitized.substring(i, (i + 1));\n    tmpNum = parseInt(digit, 10);\n    if (shouldDouble) {\n      tmpNum *= 2;\n      if (tmpNum >= 10) {\n        sum += ((tmpNum % 10) + 1);\n      } else {\n        sum += tmpNum;\n      }\n    } else {\n      sum += tmpNum;\n    }\n    shouldDouble = !shouldDouble;\n  }\n  return !!((sum % 10) === 0 ? sanitized : false);\n});\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertCustomRegex } from './utils/assert';\n/**\n * Define EAN Lenghts; 8 for EAN-8; 13 for EAN-13\n * and Regular Expression for valid EANs (EAN-8, EAN-13),\n * with exact numberic matching of 8 or 13 digits [0-9]\n */\nconst LENGTH_EAN_8 = 8;\nconst validEanRegex = /^(\\d{8}|\\d{13})$/;\n// Get position weight given:\n// EAN length and digit index/position\nfunction getPositionWeightThroughLengthAndIndex(length, index) {\n  if (length === LENGTH_EAN_8) {\n    return (index % 2 === 0) ? 3 : 1;\n  }\n\n  return (index % 2 === 0) ? 1 : 3;\n}\n// Calculate EAN Check Digit\n// Reference: https://en.wikipedia.org/wiki/International_Article_Number#Calculation_of_checksum_digit\nfunction calculateCheckDigit(ean) {\n  const checksum = ean\n    .slice(0, -1)\n    .split('')\n    .map((char, index) => Number(char) * getPositionWeightThroughLengthAndIndex(ean.length, index))\n    .reduce((acc, partialSum) => acc + partialSum, 0);\n\n  const remainder = 10 - (checksum % 10);\n\n  return remainder < 10 ? remainder : 0;\n}\n/**\n * Check if string is valid EAN: Matches EAN-8/EAN-13 regex\n * Has valid check digit.\n */\nexport default assertCustomRegex(str => {\n  const actualCheckDigit = Number(str.slice(-1));\n  return validEanRegex.test(str) && actualCheckDigit === calculateCheckDigit(str);\n});\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertCustomRegex } from './utils/assert';\n// common patterns\nvar threeDigit = /^\\d{3}$/;\nvar fourDigit = /^\\d{4}$/;\nvar fiveDigit = /^\\d{5}$/;\nvar sixDigit = /^\\d{6}$/;\nvar patterns = {\n  AD: /^AD\\d{3}$/,\n  AT: fourDigit,\n  AU: fourDigit,\n  AZ: /^AZ\\d{4}$/,\n  BE: fourDigit,\n  BG: fourDigit,\n  BR: /^\\d{5}-\\d{3}$/,\n  CA: /^[ABCEGHJKLMNPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z][\\s\\-]?\\d[ABCEGHJ-NPRSTV-Z]\\d$/i,\n  CH: fourDigit,\n  CZ: /^\\d{3}\\s?\\d{2}$/,\n  DE: fiveDigit,\n  DK: fourDigit,\n  DZ: fiveDigit,\n  EE: fiveDigit,\n  ES: /^(5[0-2]{1}|[0-4]{1}\\d{1})\\d{3}$/,\n  FI: fiveDigit,\n  FR: /^\\d{2}\\s?\\d{3}$/,\n  GB: /^(gir\\s?0aa|[a-z]{1,2}\\d[\\da-z]?\\s?(\\d[a-z]{2})?)$/i,\n  GR: /^\\d{3}\\s?\\d{2}$/,\n  HR: /^([1-5]\\d{4}$)/,\n  HU: fourDigit,\n  ID: fiveDigit,\n  IE: /^(?!.*(?:o))[A-z]\\d[\\dw]\\s\\w{4}$/i,\n  IL: /^(\\d{5}|\\d{7})$/,\n  IN: /^((?!10|29|35|54|55|65|66|86|87|88|89)[1-9][0-9]{5})$/,\n  IS: threeDigit,\n  IT: fiveDigit,\n  JP: /^\\d{3}\\-\\d{4}$/,\n  KE: fiveDigit,\n  LI: /^(948[5-9]|949[0-7])$/,\n  LT: /^LT\\-\\d{5}$/,\n  LU: fourDigit,\n  LV: /^LV\\-\\d{4}$/,\n  MX: fiveDigit,\n  MT: /^[A-Za-z]{3}\\s{0,1}\\d{4}$/,\n  NL: /^\\d{4}\\s?[a-z]{2}$/i,\n  NO: fourDigit,\n  NP: /^(10|21|22|32|33|34|44|45|56|57)\\d{3}$|^(977)$/i,\n  NZ: fourDigit,\n  PL: /^\\d{2}\\-\\d{3}$/,\n  PR: /^00[679]\\d{2}([ -]\\d{4})?$/,\n  PT: /^\\d{4}\\-\\d{3}?$/,\n  RO: sixDigit,\n  RU: sixDigit,\n  SA: fiveDigit,\n  SE: /^[1-9]\\d{2}\\s?\\d{2}$/,\n  SI: fourDigit,\n  SK: /^\\d{3}\\s?\\d{2}$/,\n  TN: fourDigit,\n  TW: /^\\d{3}(\\d{2})?$/,\n  UA: fiveDigit,\n  US: /^\\d{5}(-\\d{4})?$/,\n  ZA: fourDigit,\n  ZM: fiveDigit\n};\n// list of locales.\nconst locales = Object.keys(patterns);\n\n// example UA:52999\nexport default assertCustomRegex(str => {\n  const [locale, value] = str.split(':');\n  if (locale in patterns) {\n    return patterns[locale].test(value);\n  } else if (locale === 'any') {\n    for (var key in patterns) {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if (patterns.hasOwnProperty(key)) {\n        var pattern = patterns[key];\n\n        if (pattern.test(str)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n});\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertCustomRegex } from './utils/assert';\nexport default assertCustomRegex(val => val instanceof Date);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\n// Structured similarly to vuelidate's url.js\n// https://github.com/vuelidate/vuelidate/blob/master/src/validators/url.js\nimport { assertRegex } from './utils/assert';\nconst urlRegex = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i;\nexport default assertRegex(urlRegex);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(new RegExp(':(\\\\d{2,5})', 'g'));\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\n// Structured similarly to vuelidate's email.js\n// https://github.com/vuelidate/vuelidate/blob/master/src/validators/email.js\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/(^$|^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$)/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertCustomRegex } from './utils/assert';\nimport { isObject } from './utils/types';\nexport default assertCustomRegex(val => isObject(val));\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\n// Structured similarly to vuelidate's alpha.js\n// https://github.com/vuelidate/vuelidate/blob/master/src/validators/alpha.js\nimport { assertRegex } from './utils/assert';\nexport default assertRegex(/^[^\\s-_](?!.*?[-_]{2,})([a-z0-9-\\\\]{1,})[^\\s]*[^-_\\s]$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertCustomRegex } from './utils/assert';\nimport { isString } from './utils/types';\nexport default assertCustomRegex(val => isString(val));\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from '../utils/assert';\nexport default assertRegex(/(?:[13][a-km-zA-HJ-NP-Z1-9]{25,34})$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from '../utils/assert';\nexport default assertRegex(/^(0x)[0-9a-f]{40}$/i);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nexport const includes = (arr, val) => arr.some(arrVal => val === arrVal);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { includes } from '../utils/includes';\nimport { assertCustomRegex } from '../utils/assert';\n// from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\nconst validISO31661Alpha2CountriesCodes = [\n  'AD', 'AE', 'AF', 'AG', 'AI', 'AL', 'AM', 'AO', 'AQ', 'AR', 'AS', 'AT', 'AU', 'AW', 'AX', 'AZ',\n  'BA', 'BB', 'BD', 'BE', 'BF', 'BG', 'BH', 'BI', 'BJ', 'BL', 'BM', 'BN', 'BO', 'BQ', 'BR', 'BS', 'BT', 'BV', 'BW', 'BY', 'BZ',\n  'CA', 'CC', 'CD', 'CF', 'CG', 'CH', 'CI', 'CK', 'CL', 'CM', 'CN', 'CO', 'CR', 'CU', 'CV', 'CW', 'CX', 'CY', 'CZ',\n  'DE', 'DJ', 'DK', 'DM', 'DO', 'DZ',\n  'EC', 'EE', 'EG', 'EH', 'ER', 'ES', 'ET',\n  'FI', 'FJ', 'FK', 'FM', 'FO', 'FR',\n  'GA', 'GB', 'GD', 'GE', 'GF', 'GG', 'GH', 'GI', 'GL', 'GM', 'GN', 'GP', 'GQ', 'GR', 'GS', 'GT', 'GU', 'GW', 'GY',\n  'HK', 'HM', 'HN', 'HR', 'HT', 'HU',\n  'ID', 'IE', 'IL', 'IM', 'IN', 'IO', 'IQ', 'IR', 'IS', 'IT',\n  'JE', 'JM', 'JO', 'JP',\n  'KE', 'KG', 'KH', 'KI', 'KM', 'KN', 'KP', 'KR', 'KW', 'KY', 'KZ',\n  'LA', 'LB', 'LC', 'LI', 'LK', 'LR', 'LS', 'LT', 'LU', 'LV', 'LY',\n  'MA', 'MC', 'MD', 'ME', 'MF', 'MG', 'MH', 'MK', 'ML', 'MM', 'MN', 'MO', 'MP', 'MQ', 'MR', 'MS', 'MT', 'MU', 'MV', 'MW', 'MX', 'MY', 'MZ',\n  'NA', 'NC', 'NE', 'NF', 'NG', 'NI', 'NL', 'NO', 'NP', 'NR', 'NU', 'NZ',\n  'OM',\n  'PA', 'PE', 'PF', 'PG', 'PH', 'PK', 'PL', 'PM', 'PN', 'PR', 'PS', 'PT', 'PW', 'PY',\n  'QA',\n  'RE', 'RO', 'RS', 'RU', 'RW',\n  'SA', 'SB', 'SC', 'SD', 'SE', 'SG', 'SH', 'SI', 'SJ', 'SK', 'SL', 'SM', 'SN', 'SO', 'SR', 'SS', 'ST', 'SV', 'SX', 'SY', 'SZ',\n  'TC', 'TD', 'TF', 'TG', 'TH', 'TJ', 'TK', 'TL', 'TM', 'TN', 'TO', 'TR', 'TT', 'TV', 'TW', 'TZ',\n  'UA', 'UG', 'UM', 'US', 'UY', 'UZ',\n  'VA', 'VC', 'VE', 'VG', 'VI', 'VN', 'VU',\n  'WF', 'WS',\n  'YE', 'YT',\n  'ZA', 'ZM', 'ZW',\n];\n\nexport default assertCustomRegex(val => includes(validISO31661Alpha2CountriesCodes, val.toUpperCase()));\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { includes } from '../utils/includes';\nimport { assertCustomRegex } from '../utils/assert';\n// from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3\nconst validISO31661Alpha3CountriesCodes = [\n  'AFG', 'ALA', 'ALB', 'DZA', 'ASM', 'AND', 'AGO', 'AIA', 'ATA', 'ATG', 'ARG', 'ARM', 'ABW', 'AUS', 'AUT', 'AZE',\n  'BHS', 'BHR', 'BGD', 'BRB', 'BLR', 'BEL', 'BLZ', 'BEN', 'BMU', 'BTN', 'BOL', 'BES', 'BIH', 'BWA', 'BVT', 'BRA',\n  'IOT', 'BRN', 'BGR', 'BFA', 'BDI', 'KHM', 'CMR', 'CAN', 'CPV', 'CYM', 'CAF', 'TCD', 'CHL', 'CHN', 'CXR', 'CCK',\n  'COL', 'COM', 'COG', 'COD', 'COK', 'CRI', 'CIV', 'HRV', 'CUB', 'CUW', 'CYP', 'CZE', 'DNK', 'DJI', 'DMA', 'DOM',\n  'ECU', 'EGY', 'SLV', 'GNQ', 'ERI', 'EST', 'ETH', 'FLK', 'FRO', 'FJI', 'FIN', 'FRA', 'GUF', 'PYF', 'ATF', 'GAB',\n  'GMB', 'GEO', 'DEU', 'GHA', 'GIB', 'GRC', 'GRL', 'GRD', 'GLP', 'GUM', 'GTM', 'GGY', 'GIN', 'GNB', 'GUY', 'HTI',\n  'HMD', 'VAT', 'HND', 'HKG', 'HUN', 'ISL', 'IND', 'IDN', 'IRN', 'IRQ', 'IRL', 'IMN', 'ISR', 'ITA', 'JAM', 'JPN',\n  'JEY', 'JOR', 'KAZ', 'KEN', 'KIR', 'PRK', 'KOR', 'KWT', 'KGZ', 'LAO', 'LVA', 'LBN', 'LSO', 'LBR', 'LBY', 'LIE',\n  'LTU', 'LUX', 'MAC', 'MKD', 'MDG', 'MWI', 'MYS', 'MDV', 'MLI', 'MLT', 'MHL', 'MTQ', 'MRT', 'MUS', 'MYT', 'MEX',\n  'FSM', 'MDA', 'MCO', 'MNG', 'MNE', 'MSR', 'MAR', 'MOZ', 'MMR', 'NAM', 'NRU', 'NPL', 'NLD', 'NCL', 'NZL', 'NIC',\n  'NER', 'NGA', 'NIU', 'NFK', 'MNP', 'NOR', 'OMN', 'PAK', 'PLW', 'PSE', 'PAN', 'PNG', 'PRY', 'PER', 'PHL', 'PCN',\n  'POL', 'PRT', 'PRI', 'QAT', 'REU', 'ROU', 'RUS', 'RWA', 'BLM', 'SHN', 'KNA', 'LCA', 'MAF', 'SPM', 'VCT', 'WSM',\n  'SMR', 'STP', 'SAU', 'SEN', 'SRB', 'SYC', 'SLE', 'SGP', 'SXM', 'SVK', 'SVN', 'SLB', 'SOM', 'ZAF', 'SGS', 'SSD',\n  'ESP', 'LKA', 'SDN', 'SUR', 'SJM', 'SWZ', 'SWE', 'CHE', 'SYR', 'TWN', 'TJK', 'TZA', 'THA', 'TLS', 'TGO', 'TKL',\n  'TON', 'TTO', 'TUN', 'TUR', 'TKM', 'TCA', 'TUV', 'UGA', 'UKR', 'ARE', 'GBR', 'USA', 'UMI', 'URY', 'UZB', 'VUT',\n  'VEN', 'VNM', 'VGB', 'VIR', 'WLF', 'ESH', 'YEM', 'ZMB', 'ZWE',\n];\n\nexport default assertCustomRegex(val => includes(validISO31661Alpha3CountriesCodes, val.toUpperCase()));\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from '../utils/assert';\nexport default assertRegex(/^[a-fA-F0-9]{32}$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from '../utils/assert';\nexport default assertRegex(/^[a-fA-F0-9]{32}$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from '../utils/assert';\nexport default assertRegex(/^[a-fA-F0-9]{40}$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from '../utils/assert';\nexport default assertRegex(/^[a-fA-F0-9]{64}$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from '../utils/assert';\nexport default assertRegex(/^[a-fA-F0-9]{96}$/);\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { assertRegex } from '../utils/assert';\nexport default assertRegex(/^[a-fA-F0-9]{128}$/);\n","// export all Reactrix rules.\nexport { default as alpha } from './alpha';\nexport { default as alphaNum } from './alphaNum';\nexport { default as ipAddress } from './ipAddress';\nexport { default as lowercase } from './lowercase';\nexport { default as undefined } from './undefined';\nexport { default as uppercase } from './uppercase';\nexport { default as required } from './required';\nexport { default as function } from './function';\nexport { default as hexColor } from './hexColor';\nexport { default as ascii } from './ascii';\nexport { default as base32 } from './base32';\nexport { default as base64 } from './base64';\nexport { default as boolean } from './boolean';\nexport { default as decimal } from './decimal';\nexport { default as integer } from './integer';\nexport { default as numeric } from './numeric';\nexport { default as creditCard } from './creditCard';\nexport { default as ean } from './ean';\nexport { default as postal } from './codePostal';\nexport { default as date } from './date';\nexport { default as url } from './url';\nexport { default as port } from './port';\nexport { default as email } from './email';\nexport { default as object } from './object';\nexport { default as slug } from './slug';\nexport { default as string } from './string';\nexport { default as bitcoin } from './currency/bitcoin';\nexport { default as ethereum } from './currency/ethereum';\nexport { default as ISO31661Alpha2 } from './iso/ISO31661Alpha2';\nexport { default as ISO31661Alpha3 } from './iso/ISO31661Alpha3';\nexport { default as md4 } from './hash/md4';\nexport { default as md5 } from './hash/md5';\nexport { default as sha1 } from './hash/sha1';\nexport { default as sha256 } from './hash/sha256';\nexport { default as sha384 } from './hash/sha384';\nexport { default as sha512 } from './hash/sha512';\n\n// export all Reactrix supported locales.\nexport { default as en } from '../locale/english.json';\nexport { default as fr } from '../locale/french.json';\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport { isHasOwnProperty, isString , isNullOrUndefined } from './utils/types';\nimport * as Register from './register';\n\n// validate given input.\nexport function validateRules(input, rules, lang = 'en') {\n\n  if(isNullOrUndefined(Register[lang])) {\n    throw new TypeError(`Reactrix does not support ${lang} yet`);\n  }\n\n  if(!isHasOwnProperty(input, 'fieldKey')) {\n    input = { fieldKey: 'V' , fieldVal: input };\n  }\n\n  const { fieldKey, fieldVal } = input;\n  // list of errors provied by Reactrix.\n  const stackError = [];\n  // https://github.com/getspooky/Reactrix\n  if (!isString(rules)) {\n    throw new TypeError('Rule must be string (see docs)');\n  }\n\n  // check if the given rule has a value\n  const splitPipe = rules.split('|');\n  // push errors.\n  splitPipe.forEach(rule => {\n    const getRuleExp = Register[rule];\n    if(isNullOrUndefined(getRuleExp)) {\n      throw new TypeError(`No such validator '${rule}' exists.`);\n    }\n    // push errors.\n    if(!getRuleExp(fieldVal)) {\n      // translate given validator.\n      const msgError = new String(Register[lang].messages[rule]);\n      stackError.push(msgError.replace('{{input}}', fieldKey));\n    }\n  });\n\n  return stackError;\n\n}\n\n// return the error length.\nexport function getStackError(stackError) {\n  return stackError.length;\n}\n\n","// Copyright 2020 the Reactrix authors. All rights reserved. MIT license.\nimport React, { useState } from 'react';\nimport { validateRules } from './common';\nimport { isObject, isNullOrUndefined } from './utils/types';\n\nexport function useValidate(defaultLanguage = 'en') {\n\n   const [msg, setMsg] = useState([]);\n\n   const setValidator = (data, rules) => {\n\n     if(!isObject(rules) || isNullOrUndefined(rules)) {\n       throw new TypeError('Rules has to return an object (see docs)');\n     }\n\n     // Starts the validation process.\n     for (const [key, value] of Object.entries(rules)) {\n        const message = validateRules(data[key], value, defaultLanguage);\n        // push message state.\n        setMsg(previousState => [...previousState,...message]);\n     }\n\n   };\n\n   return [ msg, setValidator ];\n\n}\n"],"names":["isNullOrUndefined","value","undefined","isObject","obj","Array","isArray","isCallable","fn","isString","arr","isHasOwnProperty","key","hasOwnProperty","assertRegex","expr","test","assertCustomRegex","cb","val","toLowerCase","toUpperCase","creditCard","str","sanitized","replace","sum","digit","tmpNum","shouldDouble","i","length","substring","parseInt","LENGTH_EAN_8","validEanRegex","getPositionWeightThroughLengthAndIndex","index","calculateCheckDigit","ean","checksum","slice","split","map","char","Number","reduce","acc","partialSum","remainder","actualCheckDigit","threeDigit","fourDigit","fiveDigit","sixDigit","patterns","AD","AT","AU","AZ","BE","BG","BR","CA","CH","CZ","DE","DK","DZ","EE","ES","FI","FR","GB","GR","HR","HU","ID","IE","IL","IN","IS","IT","JP","KE","LI","LT","LU","LV","MX","MT","NL","NO","NP","NZ","PL","PR","PT","RO","RU","SA","SE","SI","SK","TN","TW","UA","US","ZA","ZM","locale","pattern","Date","urlRegex","RegExp","includes","some","arrVal","validISO31661Alpha2CountriesCodes","validISO31661Alpha3CountriesCodes","validateRules","input","rules","lang","Register","TypeError","fieldKey","fieldVal","stackError","splitPipe","forEach","rule","getRuleExp","msgError","String","messages","push","useValidate","defaultLanguage","useState","msg","setMsg","setValidator","data","message","previousState","Object","entries"],"mappings":"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"}